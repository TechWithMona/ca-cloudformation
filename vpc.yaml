AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation for VPC'
Resources:
  # My VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '172.16.0.0/16'
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Public Subnet in AZ 1
  PublicSubnet2A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2A

  # AppPrivate Subnet in AZ 1
  AppPrivateSubnet2A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.2.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: AppPrivateSubnet2A

  # DataPrivate Subnet in AZ 1
  DataPrivateSubnet2A:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.3.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: DataPrivateSubnet2A

  # Public Subnet in AZ 2
  PublicSubnet2B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.4.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: PublicSubnet2B

  # AppPrivate Subnet in AZ 2
  AppPrivateSubnet2B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.5.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: AppPrivateSubnet2B
  # DataPrivate Subnet in AZ 2
  DataPrivateSubnet2B:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: '172.16.6.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: DataPrivateSubnet2B

  # InternetGateway IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway

  # Attach gateway
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref InternetGateway

  # route table
  PublicRoutetable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRoutetable

  # Define Public Route to access internet
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRoutetable
      DestinationCidrBlock: '0.0.0.0/0'
      GatewayId: !Ref InternetGateway

  # Define Public Subnet 2A Association
  PublicSubnet2ARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2A
      RouteTableId: !Ref PublicRoutetable

  # Bastion Host Ec2
  BastionHost:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: bastion
      ImageId: ami-0c80e2b6ccb9ad6d1
      SubnetId: !Ref PublicSubnet2A
      SecurityGroupIds:
        - !Ref BastionSG
      Tags:
        - Key: Name
          Value: BastionHost

  # Bastion Security Grp
  BastionSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Enable SSH access'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 70.178.5.109/32

  # ami-0c80e2b6ccb9ad6d1

  # AppInstance2A
  AppInstance2A:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      KeyName: bastion
      ImageId: ami-0c80e2b6ccb9ad6d1
      SubnetId: !Ref AppPrivateSubnet2A
      SecurityGroupIds:
        - !Ref AppInstance2ASG
      Tags:
        - Key: Name
          Value: App1

  # AppInstance2B

  AppInstance2B:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t2.micro
      ImageId: ami-0c80e2b6ccb9ad6d1
      SubnetId: !Ref AppPrivateSubnet2B
      SecurityGroupIds:
        - !Ref AppInstance2BSG
      Tags:
        - Key: Name
          Value: App2

  AppInstance2ASG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow SSH from Bastion'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSG

  AppInstance2BSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Allow ICMP ping from APP1'
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
        - IpProtocol: ICMP
          FromPort: -1
          ToPort: -1
          SourceSecurityGroupId: !Ref AppInstance2ASG
